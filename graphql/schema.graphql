"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

input RequestInput{
    contributor: String = "Annonymous",
    artist: String! @rules(apply: ["required", "min:3"]),
    song_title: String! @rules(apply: ["required", "min:5"]),
    album: String = null,
    lyrics: String! @rules(apply: ["required", "min:20"]),
}

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    requests: [Request] @all
    songs: [Song!]! @paginate(defaultCount: 10)
    artists: [Artist!]! @all
    albums: [Album!]! @all
    getHotArtists: [Artist]
}

type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
}

type Request {
    id: ID!
    contributor: String
    artist: String!
    song_title: String!
    album: String
    lyrics: String!
    is_approved: Int
    approved_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}

type Artist{
    id: ID!
    name: String!
    image: String!
    albums: [Album!] @hasMany
    songs: [Song!] @hasMany
}

type Album{
    id: ID!
    artist: Artist @belongsTo
    name: String!
    cover: String
    songs: [Song] @hasMany
}

type Song{
    id: ID!
    artist: Artist! @belongsTo
    album: Album @belongsTo
    title: String!
    length: Int
    track: Int
    disc: Int
    lyrics: String!
}

type Mutation{
    createRequest(input: RequestInput! @spread): Request @create
}
